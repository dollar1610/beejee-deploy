{"version":3,"sources":["app/constants.js","app/reducer.js","rootReducer.js","store.js","modals/auth.js","modals/createTask.js","modals/editTask.js","utils/urlEncode.js","app/index.js","app/action.js","serviceWorker.js","index.js"],"names":["TASK_LIST","IS_ADMIN","ACTIVE_PAGE","initialState","taskList","isAdmin","activePage","appReducer","state","arguments","length","undefined","action","type","Object","objectSpread","payload","rootReducer","combineReducers","store","createStore","Auth","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","modal","toggle","bind","assertThisInitialized","setState","prevState","_this2","react_default","a","createElement","className","onClick","Modal","isOpen","ModalHeader","ModalBody","Input","id","placeholder","ModalFooter","Button","signIn","color","React","Component","createTask","defaultValue","value","readOnly","editText","taskId","getUrl","data","url","keys","forEach","key","concat","encodeURIComponent","slice","App","loadData","changeActivePage","sort","pageNumber","dispatch","username","document","getElementById","email","text","form","FormData","append","fetch","method","body","then","response","console","log","status","json","tasks","signature","map","item","urlEncode","token","md5","login","password","event","sort_field","target","dataset","sort_direction","sortDirection","_this3","message","_this4","totalTaskCount","total_task_count","Container","auth","data-sort-direction","data-sort","task","defaultChecked","editTask","Pagination_default","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","onChange","itemClass","linkClass","connect","get","Boolean","window","location","hostname","match","ReactDOM","render","es","src_app","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3373522e.chunk.js","sourcesContent":["export const TASK_LIST = 'TASK_LIST';\nexport const IS_ADMIN = 'IS_ADMIN';\nexport const ACTIVE_PAGE = 'ACTIVE_PAGE';\n","import { TASK_LIST, IS_ADMIN, ACTIVE_PAGE } from './constants';\n\nconst initialState = {\n  taskList: [],\n  isAdmin: false,\n  activePage: 1,\n}\n\nfunction appReducer(state=initialState, action) {\n  switch(action.type) {\n    case TASK_LIST:\n      return {...state, taskList: action.payload};\n    case IS_ADMIN:\n      return {...state, isAdmin: action.payload};\n    case ACTIVE_PAGE:\n      return {...state, activePage: action.payload};\n    default:\n     return state;\n  }\n}\n\nexport default appReducer;\n","import { combineReducers } from 'redux-immutable';\nimport appReducer from './app/reducer';\n\nconst rootReducer = combineReducers({\n  appReducer,\n});\n\nexport default rootReducer;\n","import { createStore } from 'redux';\nimport rootReducer from './rootReducer';\n\nconst store = createStore(\n  rootReducer,\n);\n\nexport default store;\n","import React from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Input } from 'reactstrap';\n\nclass Auth extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false\n    };\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n  }\n\n  render() {\n    return (\n      <div>\n        <button className=\"btn\" onClick={this.toggle}>Вход для администратора</button>\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\n          <ModalHeader toggle={this.toggle}>Вход</ModalHeader>\n          <ModalBody>\n            <Input\n                id=\"login\"\n                type=\"text\"\n                placeholder=\"Имя пользователя\"\n              />\n              <Input\n                id=\"password\"\n                type=\"text\"\n                placeholder=\"Пароль\"\n              />\n          </ModalBody>\n          <ModalFooter>\n            <Button onClick={() => { this.props.signIn(); this.toggle(); } } color=\"primary\">Войти</Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default Auth;","import React from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Input } from 'reactstrap';\n\nclass Auth extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false\n    };\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n  }\n\n  render() {\n    return (\n      <div>\n        <button className=\"btn\" onClick={this.toggle}>Создать задачу</button>\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\n          <ModalHeader toggle={this.toggle}>Окно создания задачи</ModalHeader>\n          <ModalBody>\n            <Input\n             id=\"createUsername\"\n              type=\"text\"\n              placeholder=\"Имя пользователя\"\n            />\n            <Input\n              id=\"createEmail\"\n              type=\"text\"\n              placeholder=\"Почта\"\n            />\n            <Input\n              id=\"createText\"\n              type=\"text\"\n              placeholder=\"Текст задачи\"\n            />\n          </ModalBody>\n          <ModalFooter>\n            <Button onClick={() => { this.props.createTask(); this.toggle(); } } color=\"primary\">Создать</Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default Auth;","import React from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Input } from 'reactstrap';\n\nclass Auth extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false\n    };\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n  }\n\n  render() {\n    return (\n      <div>\n        <textarea onClick={this.toggle} defaultValue={this.props.value} readOnly={!this.props.isAdmin} />\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\n          <ModalHeader toggle={this.toggle}>Окно редактирования задачи</ModalHeader>\n          <ModalBody>\n            <textarea id=\"editText\" defaultValue={this.props.value} />\n            <Input placeholder=\"Введите статус задачи\" id=\"editStatus\" type=\"text\" />\n          </ModalBody>\n          <ModalFooter>\n            <Button onClick={() => { this.props.editText(this.props.taskId); this.toggle(); }} color=\"primary\">Редактировать</Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default Auth;","export default function getUrl(data) {\n  let url = '';\n  Object.keys(data).forEach((key) => {\n      url += `${key}=${encodeURIComponent(data[key])}`;\n      url += `&`;\n  });\n  url = url.slice(0,url.length-1);\n  return url;\n}","import React, { Component } from 'react';\nimport Pagination from \"react-js-pagination\";\nimport md5 from 'md5';\nimport { Container } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport ModalAuth from '../modals/auth';\nimport ModalCreateTask from '../modals/createTask';\nimport ModalEditTask from '../modals/editTask';\nimport urlEncode from '../utils/urlEncode';\nimport { isAdmin, setTaskList, setActivePage } from './action';\nimport './index.css';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.loadData = this.loadData.bind(this);\n    this.changeActivePage = this.changeActivePage.bind(this);\n    this.signIn = this.signIn.bind(this);\n    this.sort = this.sort.bind(this);\n    this.createTask = this.createTask.bind(this);\n    this.editText = this.editText.bind(this);\n  }\n  componentDidMount() {\n    this.loadData();\n  }\n  changeActivePage(pageNumber) {\n    this.props.dispatch(setActivePage(pageNumber));\n  }\n  createTask() {\n    const username = document.getElementById('createUsername').value;\n    const email = document.getElementById('createEmail').value;\n    const text = document.getElementById('createText').value;\n    const form = new FormData();\n    form.append('username', encodeURIComponent(username));\n    form.append('email', email);\n    form.append('text', encodeURIComponent(text));\n    fetch(`https://uxcandy.com/~shapoval/test-task-backend/create?developer=Example`, {\n      method: 'POST',\n      body: form,\n    }).then(response => {\n      console.log(response.status);\n      if (response.status === 200) {\n        console.log(response.json());\n        this.loadData();\n      }\n    })\n  }\n  editText(id) {\n    const taskList = this.props.App.taskList.tasks;\n    const text = document.getElementById('editText').value;\n    const status = document.getElementById('editStatus').value;\n    // let username, email;\n    // taskList.filter((item, i) => {\n    //   if (id === taskList[i].id) {\n    //     username = taskList[i].username;\n    //     email = taskList[i].email;\n    //   }\n    // });  \n    let signature = '';\n    [{text}, {status}].sort().map((item) => {\n      signature += urlEncode(item);\n      signature += '&';\n      return null;\n    });\n    signature += urlEncode({\n      token: 'beejee'\n    });\n    let url = urlEncode({\n      text,\n      status,\n      token: 'beejee',\n    });\n    console.log(signature, url);\n    fetch(`https://uxcandy.com/~shapoval/test-task-backend/edit/:${id}?developer=Example&signature=${md5(signature)}`, {\n      method: 'POST',\n      body: `${url}`,\n    }).then(response => console.log(response.json()))\n    this.loadData(url);\n  }\n  signIn() {\n    const login = document.getElementById('login').value;\n    const password = document.getElementById('password').value;\n    if (login === 'admin' && password === '123') {\n      this.props.dispatch(isAdmin(true));\n    }\n  }\n  sort(event) {\n    const sort_field = event.target.dataset.sort;\n    const sort_direction = event.target.dataset.sortDirection;\n    const url = urlEncode({\n      sort_field,\n      sort_direction,\n    })\n    console.log(url);\n    this.loadData(url);\n  }\n  loadData(url='') {\n    const activePage = this.props.App.activePage;\n    fetch(`https://uxcandy.com/~shapoval/test-task-backend/?developer=Name&${url}&page=${activePage}`)\n      .then(response => response.json()).then(data => {\n        this.props.dispatch(setTaskList(data.message));\n      })\n  }\n  render() {\n    console.log(this.props);\n    const taskList = this.props.App.taskList.tasks || [];\n    const isAdmin = this.props.App.isAdmin;\n    // это не я такое свойство придумал, это с бека такое пришло. Скорее там ошибка, чем у меня, т.к там и камелкейс и снейккейс\n    const totalTaskCount = this.props.App.taskList.total_task_count;\n    const activePage = this.props.App.activePage;\n    return (\n      <div className=\"App\">\n      <Container>\n        <div className=\"header\">\n          <div className=\"admin\"><ModalAuth signIn={this.signIn} /></div>\n          <ModalCreateTask createTask={this.createTask}  />\n        </div>\n        <div className=\"body\">\n          <div className=\"body-header\">\n            <span>Сортировать по:</span>\n            <div className=\"username\">\n              Имя пользователя\n              <button onClick={this.sort}><i data-sort-direction=\"asc\" data-sort=\"username\" className=\"fas fa-arrow-up\"/></button>\n              <button onClick={this.sort}><i data-sort-direction=\"desc\"  data-sort=\"username\" className=\"fas fa-arrow-down\"/></button>\n            </div>\n            <div className=\"email\">\n              E-mail\n              <button onClick={this.sort}><i data-sort-direction=\"asc\"  data-sort=\"email\" className=\"fas fa-arrow-up\"/></button>\n              <button onClick={this.sort}><i data-sort-direction=\"desc\" data-sort=\"email\" className=\"fas fa-arrow-down\"/></button>\n            </div>\n            <div className=\"status\">\n              Статус\n              <button onClick={this.sort}><i data-sort-direction=\"asc\"  data-sort=\"status\" className=\"fas fa-arrow-up\"/></button>\n              <button onClick={this.sort}><i data-sort-direction=\"desc\" data-sort=\"status\" className=\"fas fa-arrow-down\"/></button>\n            </div>\n          </div>\n          <div className=\"body-tasks\">\n            {taskList.map((task) => (\n              <div key={task.id} className=\"body-tasks-item\">\n                <div className=\"body-task-status\">\n                  <input defaultChecked={task.status === 10} type=\"checkbox\" />\n                </div>\n                <div className=\"body-tasks-item-name\">\n                  <span>{task.username}</span>\n                </div>\n                <div className=\"body-tasks-item-email\">\n                  <span>{task.email}</span>\n                </div>\n                <div className=\"body-tasks-item-text\">\n                  {!isAdmin ?\n                    <textarea  value={task.text} readOnly={!isAdmin}/> :\n                    <ModalEditTask taskId={task.id} editText={this.editText} value={task.text} isAdmin={isAdmin} />\n                  }\n                </div>\n              </div>\n            ))}\n            <Pagination\n              activePage={activePage}\n              itemsCountPerPage={10}\n              totalItemsCount={totalTaskCount}\n              pageRangeDisplayed={5}\n              onChange={this.changeActivePage}\n              itemClass=\"page-item\"\n              linkClass=\"page-link\"\n            />\n          </div>\n        </div>\n      </Container>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return ({\n    App: state.get('appReducer'),\n  })\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatch,\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(App);\n\n","import { TASK_LIST, IS_ADMIN, ACTIVE_PAGE } from './constants';\n\nexport function setTaskList(payload) {\n  return {\n    type: TASK_LIST,\n    payload,\n  }\n}\n\nexport function isAdmin(payload) {\n  return {\n    type: IS_ADMIN,\n    payload,\n  }\n}\n\nexport function setActivePage(payload) {\n  return {\n    type: ACTIVE_PAGE,\n    payload,\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport App from './app/index';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}